{"ast":null,"code":"var _jsxFileName = \"/home/taotao/Portfolio Website/kodachrome128.github.io/src/components/AnimatedDiv.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSpring, animated, config } from '@react-spring/web';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedDiv = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const location = useLocation();\n  const props = useSpring({\n    from: {\n      opacity: 0,\n      translateY: 100\n    },\n    to: async (next, cancel) => {\n      await next({\n        opacity: 1,\n        translateY: 0,\n        config: config.default\n      });\n      await next({\n        opacity: 0,\n        translateY: 100,\n        config: config.default\n      });\n    },\n    immediate: !location.pathname.startsWith('/') // Don't animate on initial mount\n  });\n\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      opacity: props.opacity,\n      transform: props.translateY.interpolate(value => `translateY(${value}px)`)\n    },\n    className: \"padding\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_s(AnimatedDiv, \"Zq5Zvjm7GBeR3ufx/gtsuh7B0o8=\", false, function () {\n  return [useLocation, useSpring];\n});\n_c = AnimatedDiv;\nexport default AnimatedDiv;\nvar _c;\n$RefreshReg$(_c, \"AnimatedDiv\");","map":{"version":3,"names":["React","useSpring","animated","config","useLocation","jsxDEV","_jsxDEV","AnimatedDiv","_ref","_s","children","location","props","from","opacity","translateY","to","next","cancel","default","immediate","pathname","startsWith","div","style","transform","interpolate","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/taotao/Portfolio Website/kodachrome128.github.io/src/components/AnimatedDiv.jsx"],"sourcesContent":["import React from 'react';\nimport {useSpring, animated, config} from '@react-spring/web';\nimport { useLocation } from 'react-router-dom';\n\n\nconst AnimatedDiv = ({ children }) => {\n    const location = useLocation();\n\n    const props = useSpring({\n      from: { opacity: 0, translateY: 100 },\n      to: async (next, cancel) => {\n        await next({ opacity: 1, translateY: 0, config: config.default });\n        await next({ opacity: 0, translateY: 100, config: config.default });\n      },\n      immediate: !location.pathname.startsWith('/'), // Don't animate on initial mount\n    });\n    \n    return (\n      <animated.div\n        style={{\n          opacity: props.opacity,\n          transform: props.translateY.interpolate((value) => `translateY(${value}px)`),\n        }} className=\"padding\"\n      >\n        {children}\n      </animated.div>\n    );\n  };\n  \nexport default AnimatedDiv;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAO,mBAAmB;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,WAAW,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7B,MAAMG,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,KAAK,GAAGX,SAAS,CAAC;IACtBY,IAAI,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAI,CAAC;IACrCC,EAAE,EAAE,MAAAA,CAAOC,IAAI,EAAEC,MAAM,KAAK;MAC1B,MAAMD,IAAI,CAAC;QAAEH,OAAO,EAAE,CAAC;QAAEC,UAAU,EAAE,CAAC;QAAEZ,MAAM,EAAEA,MAAM,CAACgB;MAAQ,CAAC,CAAC;MACjE,MAAMF,IAAI,CAAC;QAAEH,OAAO,EAAE,CAAC;QAAEC,UAAU,EAAE,GAAG;QAAEZ,MAAM,EAAEA,MAAM,CAACgB;MAAQ,CAAC,CAAC;IACrE,CAAC;IACDC,SAAS,EAAE,CAACT,QAAQ,CAACU,QAAQ,CAACC,UAAU,CAAC,GAAG,CAAC,CAAE;EACjD,CAAC,CAAC;;EAEF,oBACEhB,OAAA,CAACJ,QAAQ,CAACqB,GAAG;IACXC,KAAK,EAAE;MACLV,OAAO,EAAEF,KAAK,CAACE,OAAO;MACtBW,SAAS,EAAEb,KAAK,CAACG,UAAU,CAACW,WAAW,CAAEC,KAAK,IAAM,cAAaA,KAAM,KAAI;IAC7E,CAAE;IAACC,SAAS,EAAC,SAAS;IAAAlB,QAAA,EAErBA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB,CAAC;AAACvB,EAAA,CAtBEF,WAAW;EAAA,QACIH,WAAW,EAEdH,SAAS;AAAA;AAAAgC,EAAA,GAHrB1B,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}